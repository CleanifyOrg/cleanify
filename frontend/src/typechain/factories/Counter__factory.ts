/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Increment",
    type: "event",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementByAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103463803806103468339818101604052810190610032919061007a565b80600081905550506100a7565b600080fd5b6000819050919050565b61005781610044565b811461006257600080fd5b50565b6000815190506100748161004e565b92915050565b6000602082840312156100905761008f61003f565b5b600061009e84828501610065565b91505092915050565b610290806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306661abd14610046578063991ec4a314610064578063d09de08a14610080575b600080fd5b61004e61008a565b60405161005b9190610155565b60405180910390f35b61007e600480360381019061007991906101a1565b610090565b005b6100886100e6565b005b60005481565b806000808282546100a191906101fd565b925050819055507f12fae9aa25c3224f14c3c4dca03fc2ba95dced8e8fb3a7df3d77f4d3aeb6273c600054426040516100db929190610231565b60405180910390a150565b60016000808282546100f891906101fd565b925050819055507f12fae9aa25c3224f14c3c4dca03fc2ba95dced8e8fb3a7df3d77f4d3aeb6273c60005442604051610132929190610231565b60405180910390a1565b6000819050919050565b61014f8161013c565b82525050565b600060208201905061016a6000830184610146565b92915050565b600080fd5b61017e8161013c565b811461018957600080fd5b50565b60008135905061019b81610175565b92915050565b6000602082840312156101b7576101b6610170565b5b60006101c58482850161018c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102088261013c565b91506102138361013c565b925082820190508082111561022b5761022a6101ce565b5b92915050565b60006040820190506102466000830185610146565b6102536020830184610146565b939250505056fea2646970667358221220ae694b816233ee2ff5f4f5ff92c0171846a837da5bf234e5dfd29db04f160fd964736f6c63430008130033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _count: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<Counter> {
    return super.deploy(_count, overrides || {}) as Promise<Counter>;
  }
  override getDeployTransaction(
    _count: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_count, overrides || {});
  }
  override attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  override connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
